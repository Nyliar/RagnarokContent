prontera,162,192,6	script	Goddess Statue::alagost	4_F_08_STATUE,{
	setarray .VIPBuffs, SC_ENCHANTBLADE, SC_GIANTGROWTH, SC_STONEHARDSKIN, SC_STRIKING, SC_RECOGNIZEDSPELL, SC_SOULLINK; 
	setarray .BuffsVIPEffect, -1, -1, -1, EF_AURABLADE, EF_KYRIE, EF_SOULLINK;   
	setarray .BuffsVIPLevel, 3, 1, 1, 3, 1, 5; 
	setarray .BuffsVIPPackLevel, 3, 2, 2, 1, 1, 3;

	function Job_Menu; function A_An;

	set .@npcname$, "[Goddess Statue]";
	mes .@npcname$;
	mes "This looks like a statue of a goddess.";
	mes "It looks almost alive...";

	set .@menu$, "";
	.@menu$ += (.heal ? "Pray for Health:" : ":");
	.@menu$ += (.rental ? "Pray for a Companion:" : ":");
	.@menu$ += (.stylist ? "Pray for better Appearance:" : ":");
	.@menu$ += (.jobchange ? "Pray for Evolution:" : ":");
	.@menu$ += (.embued ? "Pray for Goddess Pity:" : ":");
	.@menu$ += (.identify ? "Pray for knowledge:" : ":");
	.@menu$ += (.multiclass ? "Pray for advanced knowledge:" : ":");
	.@menu$ += (.lottery ? "Make an offering:" : ":");

	switch(select(.@menu$))
	{
		case 1:
			next;
			mes .@npcname$;
			mes "You can feel the Goddess love over you. Stay near the statue for complete restauration.";
			close2;
			set SANCTUHEALING, 1;
			goto OnHeal;
			break;
		case 2:
			close2;
			goto OnBreed;
			break;
		case 3:
			goto OnStylist;
			break;
		case 4:
			goto OnChangeJob;
			break;
		case 5:
			goto OnEmbued;
			break;
		case 6:
			goto OnIdentify;
			break;
		case 7:
			goto OnKnowledge;
			break;
		case 8:
			goto OnLottery;
			break;
	}
	close;

OnKnowledge:
	if(countitem(.shardIds[2]) < 1)
	{
		mes "You need a " + getitemname(.shardIds[2]) + " to gain an advanced knowledge.";
	}
	else
	{
		switch(select("Physical","Magic","Buffs","Support","Area change","Ninjutsu"))
		{
			case 1:
				setarray .@skillIds[0], 397, 368, 480, 2002, 2004, 2005, 2006, 2020, 2307, 2308, 2312, 2314, 2317, 2233, 2236,
				2278, 2279, 2280, 2288, 379, 406, 214, 5033, 5032;
				break;
			case 2:
				setarray .@skillIds[0], 375, 405, 80, 83, 84, 85, 86, 87, 89, 2201, 2202, 2203, 2204, 2211, 2212, 2214, 2216, 
				2443, 2444, 2453, 2454, 2040, 2038, 2051, 2052, 5036, 5026, 5027, 5028, 5029;
				break;
			case 3:
				setarray .@skillIds[0], 403, 482, 276, 277, 289, 2205, 2206, 2445, 2446, 2447, 2449, 531, 543, 355, 356, 357, 
				358, 249, 252, 258, 2001, 2311, 2313, 2316, 2318, 2325, 5013, 2234, 5002, 380, 383, 2050, 2053, 2054, 2276,
				384, 111, 112, 113, 114, 2035, 2292, 2293, 2294, 2295, 2296, 2297, 389, 390, 378, 5044;
				break;
			case 4:
				setarray .@skillIds[0], 373, 374, 404, 2207, 2208, 2451, 2238, 2239, 2338, 2344, 2345, 2346, 2347, 2348, 462,
				463, 464, 465, 5038, 5039, 5040, 5035;
				break;
			case 5:
				setarray .@skillIds[0], 285, 286, 287, 288, 92, 2450, 2452, 2465, 2466, 2467, 2468, 2253, 2254, 2281, 2282, 5006;				
				break;
			case 6:
				setarray .@skillIds[0], 534, 535, 536, 537, 538, 539, 540, 541, 542, 3006, 3007, 3008, 3011, 3015, 3016, 3017, 
				3018, 3022, 3029;
				break;
		}
		do
		{
			.@rand = rand(0,getarraysize(.@skillIds) - 1);
			set .@skillId, .@skillIds[.@rand];
		}
		while(getskilllv(.@skillId) > 5);
		skill .@skillId, getskilllv(.@skillId) + 1, 3;	
		delitem .shardIds[2], 1;
		dispbottom "You've been granted a new knowledge.";
	}
	end;

OnIdentify:
	charcommand "#identifyall " + strcharinfo(0);
	end;
	
OnEmbued:
	mes "To embue your weapon, you'll have to make a generous offering.";
	mes "" + $embuePrice + " " + getitemname(.shardIds[0]) + " and " + $embuePriceZ + " zenies,";
	mes "multiplied by the number of addons allready present.";
	if(select("Ok","Cancel") == 2)
	{
		close;
	}

	//retrieve compounded cards
	set .@cardId1, getequipcardid(EQI_HAND_R,0);
	set .@cardId2, getequipcardid(EQI_HAND_R,1);
	set .@cardId3, getequipcardid(EQI_HAND_R,2);
	set .@cardId4, getequipcardid(EQI_HAND_R,3);
	
	set .@gemId, rand($embuedIds[0],$embuedIds[1]);
	
	set .@cardRank, -1;
	//coumpound in first free slot
	if (.@cardId1 == 0)
	{
		set .@cardId1, .@gemId;	
		set .@multiply, 1;
	}
	else if (.@cardId2 == 0)
	{
		set .@cardId2, .@gemId;	
		set .@multiply, 2;
	}
	else if (.@cardId3 == 0)
	{
		set .@cardId3, .@gemId;	
		set .@multiply, 3;
	}
	else if (.@cardId4 == 0)
	{
		set .@cardId4, .@gemId;	
		set .@multiply, 4;			
	}
	else
	{
		next;
		mes .@npcname$;
		mes "Your weapon is allready embued.";
		close;
	}
	
	if(Zeny < $embuePriceZ * .@multiply)
	{
		next;
		mes "You don't have enough zenies for the offering.";
		close;
	}
	if(countitem(.shardIds[0]) < $embuePrice * .@multiply)
	{
		next;
		mes "You don't have enough shards for the offering.";
		close;
	}
	set .@refine, getequiprefinerycnt(EQI_HAND_R);
	
	set Zeny, Zeny - $embuePriceZ * .@multiply;
	delitem .shardIds[0], $embuePrice * .@multiply;	
	
	set .@itemId, getequipid(EQI_HAND_R);
	delequip EQI_HAND_R;
	getitem2 .@itemId, 1, 1, .@refine, 0, .@cardId1, .@cardId2, .@cardId3, .@cardId4;
	equip .@itemId;
	end;
	
OnLottery:
	mes "Which kind of offering would like to do?";
	set .@menu$, "";
	for(set .@i,0; .@i<getarraysize($shardForLottery); set .@i,.@i+1)
	{
		set .@menu$, .@menu$ + (.@i == 0 ? "" : ":") + $shardForLottery[.@i] + " " + getitemname(.shardIds[.@i]);
	}
	set .@choice, select(.@menu$) - 1;
	if(.@choice != 254)
	{
		if(countitem(.shardIds[.@choice]) >= $shardForLottery[.@choice])
		{
			delitem .shardIds[.@choice], $shardForLottery[.@choice];
			specialeffect2 223; //holy cast
			mes "The Goddess heard your prayer.";
			getitem(.lotteryIds[rand(0,getarraysize(.lotteryIds) - 1)], 1);
		}
		else
		{
			next;
			mes "You don't have enough items to make this offering.";
		}
	}
	close;
	
OnStylist:
	setarray .@styles[1],getbattleflag("max_cloth_color"),getbattleflag("max_hair_style"),getbattleflag("max_hair_color");
	setarray .@Look[1],7,1,6;
	set .@s, select(" ~ Cloth color", " ~ Hairstyle", " ~ Hair color");
	set .@Revert, getlook(.@Look[.@s]);
	set .@style,1;
	while(1) {
		setlook .@Look[.@s], .@style;
		message strcharinfo(PC_NAME),"This is style #"+.@style+".";
		set .@menu$, " ~ Next (^0055FF"+((.@style!=.@styles[.@s])?.@style+1:1)+"^000000): ~ Previous (^0055FF"+((.@style!=1)?.@style-1:.@styles[.@s])+"^000000): ~ Jump to...: ~ Revert to original (^0055FF"+.@Revert+"^000000)";
		switch(select(.@menu$)) {
			case 1: set .@style, ((.@style!=.@styles[.@s])?.@style+1:1); break;
			case 2: set .@style, ((.@style!=1)?.@style-1:.@styles[.@s]); break;
			case 3: message strcharinfo(PC_NAME),"Choose a style between 1 - "+.@styles[.@s]+".";
				input .@style,0,.@styles[.@s];
				if (!.@style) set .@style, rand(1,.@styles[.@s]);
				break;
			case 4: set .@style, .@Revert; setlook .@Look[.@s], .@Revert; break;
		}
	}
	close;
	
OnBreed:
	if (ismounting()) {
		message strcharinfo(0),"You must first remove your mount.";
		end;
	} else if (((eaclass()&EAJ_THIRDMASK)==EAJ_RANGER) && !countitem(6124)) {
		if (!checkfalcon() && getskilllv("HT_FALCON") && !checkwug()) {
			if(select(" ~ Falcon: ~ Warg")==1) setfalcon;
			else getitem 6124,1; //Wolf's_Flute
		} else getitem 6124,1; //Wolf's_Flute
	} else if (((eaclass()&EAJ_THIRDMASK)==EAJ_MECHANIC) && !checkcart() && getskilllv("MC_PUSHCART")) {
		if (!checkmadogear() && getskilllv("NC_MADOLICENCE")) {
			if(select(" ~ Cart: ~ Mado")==1) setcart;
			else setmadogear;
		} else setcart;
	} else if (!checkcart() && getskilllv("MC_PUSHCART")) setcart;
	else if (!checkfalcon() && getskilllv("HT_FALCON") && !checkwug()) setfalcon;
	else if (!checkriding() && !checkdragon() && getskilllv("KN_RIDING")) {
		if ((eaclass()&EAJ_THIRDMASK)==EAJ_RUNE_KNIGHT) setdragon;
		else setriding;
	} else if (!checkmadogear() && getskilllv("NC_MADOLICENCE")) setmadogear;
	else {
		message strcharinfo(0),"You do not meet requirements to rent.";
		end;
	}
	specialeffect2 EF_TEIHIT3;
	end;	
	
OnHeal:
	getmapxy(.@map$,.@mapx,.@mapy,UNITTYPE_PC);
	getmapxy(.@nmap$,.@nmapx,.@nmapy,UNITTYPE_NPC);
	if(SANCTUHEALING == 1 && .@map$ == strnpcinfo(4) 
		&& .@mapx >= .@nmapx - 2 && .@mapx <= .@nmapx + 2 
		&& .@mapy >= .@nmapy - 2 && .@mapy <= .@nmapy + 2)
	{
		percentheal 4, 4;
		if(.specialEffect == 2 && SANCTUHEALCOUNT == 0)
		{
			specialeffect2 346; //221
		}
		set SANCTUHEALCOUNT, SANCTUHEALCOUNT + 1;
		if(SANCTUHEALCOUNT % 5 == 0)
		{
			callsub OnReceiveBuff;
		}
		addtimer 1000, strnpcinfo(3) + "::OnHeal";
	}	
	else
	{
		set SANCTUHEALING, 0;
		set SANCTUHEALCOUNT, 0;
		message strcharinfo(0), "You're too far to receive goddess' blessing. Come closer and try again.";
	}
	end;
	
OnReceiveBuff:
	if(SANCTUHEALCOUNT >= 5)
	{
		//Increase agility lv 10
		sc_start(SC_INCAGI, 600000, 10);
		
		if(VIP_PACKAGE > 0) {
			switch ( BaseJob ) {     
				case 18:    
					.@spirit = 445; 
					break;        
				case 20:      
				case 15:    
					.@spirit = 447;
					break;       
				case 19:    
					.@spirit = 455; 
					break;       
				case 4047:  
					.@spirit = 448;
					break;       
				case 17:    
					.@spirit = 456;
					break;       
				case 16:   
					.@spirit = 449;
					break;     
				case 12:   
					.@spirit = 457; 
					break;       
				case 14:    
					.@spirit = 450;
					break;       
				case 10:  
					.@spirit = 458; 
					break;       
				case 23:    
					.@spirit = 451; 
					break;     
				case 11:  
					.@spirit = 460;
					break;      
				case 7:     
					.@spirit = 452;
					break;        
				case 4049:  
					.@spirit = 461; 
					break;       
				case 8:   
					.@spirit = 454;
					break;      
				case 9:     
					.@spirit = 453; 
					break;    
			}  
			
			for( .@i = 0; .@i < getarraysize( .VIPBuffs ); .@i++ ) {  
				if(VIP_PACKAGE > .BuffsVIPPackLevel[.@i])
				{
					if(.VIPBuffs[.@i] == SC_SOULLINK) {
						if(VIP_BUFFS_OFF != 1)
						{
							stand (strcharinfo(0)); // <- Added this so characters dont get stuck when soul link is casting. 
							sc_start4 .VIPBuffs[.@i], 240000, .BuffsVIPLevel[.@i], .@spirit, 0, 0;  
							skilleffect .@spirit, .BuffsVIPLevel[.@i]; // Start Soul Link Effect.  
						}
					} else {
						specialeffect2 .BuffsVIPEffect[.@i];
						sc_start .VIPBuffs[.@i], 240000, .BuffsVIPLevel[.@i];
					}
				}				
			}  
		}
	}
	if(SANCTUHEALCOUNT >= 10)
	{
		//Blessing lv 10
		sc_start(SC_BLESSING, 600000, 10);
	}
	if(SANCTUHEALCOUNT >= 15)
	{
		//Assoumptio lv 5
		sc_start(SC_ASSUMPTIO, 600000, 5);		
	}
	if(SANCTUHEALCOUNT >= 20)
	{
		//Kerry Eleison lv 5
		sc_start(SC_KYRIE, 600000, 5);		
	}
	if(SANCTUHEALCOUNT >= 25)
	{
		//Impositio manus lv 2	
		sc_start(SC_IMPOSITIO, 600000, 2);		
	}
	if(SANCTUHEALCOUNT >= 30)
	{
		//Magnificat lv 5
		sc_start(SC_MAGNIFICAT, 600000, 5);		
	}
	if(SANCTUHEALCOUNT >= 35)
	{
		if( getbrokenid(1) ) repairall;
		sc_end SC_STONE;
		sc_end SC_SLOWDOWN;
		sc_end SC_FREEZE;
		sc_end SC_SLEEP;
		sc_end SC_CURSE;
		sc_end SC_SILENCE;
		sc_end SC_CONFUSION;
		sc_end SC_BLIND;
		sc_end SC_BLEEDING;
		sc_end SC_DECREASEAGI;
		sc_end SC_POISON;
		sc_end SC_HALLUCINATION;
		sc_end SC_STRIPWEAPON;
		sc_end SC_STRIPARMOR;
		sc_end SC_STRIPHELM;
		sc_end SC_STRIPSHIELD;
		sc_end SC_CHANGEUNDEAD;
		sc_end SC_ORCISH;
		sc_end SC_BERSERK;
		sc_end SC_SKE;
		sc_end SC_SWOO;
		sc_end SC_SKA;	
	}	
	return;
	
OnChangeJob:
	if(Class == Job_Gangsi)
	{
		mes "No more jobs are available.";
		close;
	}
	if (Class > Job_Soul_Linker) {
		mes "You can now become a Gangsi.";
		mes "Be doing so, you'll be reset to 1/1 once more. You won't be able to use your skills from now.";
		mes "But you'll be able to use any skills, as long as you're equipped with the right weapon.";
		mes "Be careful. Training will be more difficult than ever!";
		if(select("Ok","Cancel") == 1)
		{
			specialeffect2 EF_ANGEL2;
			specialeffect2 EF_ELECTRIC;
			resetlvl(1);
			jobchange(Job_Gangsi);
			charcommand "#getbaseskills " + strcharinfo(0);
			set CLASSPATH, 2;
			set TUTORIAL, 3;
		}
	}
	if (checkfalcon() || checkcart() || checkriding()) {
		mes "Please remove your "+((checkfalcon())?"falcon":"")+((checkcart())?"cart":"")+((checkriding())?"mount":"")
			+" before proceeding.";
		close;
	}
	if (.skill_point_check && SkillPoint > 0) {
		mes "Please use all your skill points before proceeding.";
		close;
	}

	.@eac = eaclass();
	.@base = .third_classes ? roclass(.@eac&EAJ_UPPERMASK) : Class;
	if (.@base >= Job_Knight && .@base <= Job_Crusader2) {
		if (BaseLevel < .rebirth_blevel || JobLevel < .rebirth_jlevel) {
			.@blvl = .rebirth_blevel - BaseLevel;
			.@jlvl = .rebirth_jlevel - JobLevel;
			mes "You need "
				+ (BaseLevel < .rebirth_blevel ? ((.rebirth_blevel - BaseLevel) +" more base levels "+ (JobLevel < .rebirth_jlevel ? "and " : "")) : "")
				+ (JobLevel < .rebirth_jlevel ? (.rebirth_jlevel - JobLevel) +" more job levels " : "")
				+ "to continue.";
			close;
		}
		if (Class > Job_Crusader2) {
			mes "Switch to third class?";
			next;
			Job_Menu(roclass(.@eac|EAJL_THIRD));
			close;
		}
		while (true) {
			mes "Select an option.";
			next;
			.@choice = select(" ~ ^0055FFRebirth^000000", (.third_classes ? " ~ ^FF0000Third Class^000000":""), " ~ ^777777Cancel^000000");
			if (.@choice == 3)
				close;
			mes "[Job Master]";
			mes "Are you sure?";
			next;
			if (.@choice == 1)
				Job_Menu(Job_Novice_High);
			else
				Job_Menu(roclass(.@eac|EAJL_THIRD));
			mes "[Job Master]";
		}
	}
	.@job1 = roclass(.@eac|EAJL_2_1);
	.@job2 = roclass(.@eac|EAJL_2_2);
	if ((.@eac&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE) {
		.@newclass = roclass(.@eac|EAJL_THIRD);
		.@required_jlevel = 99;
	} else if (Class == Job_Ninja || Class == Job_Gunslinger) {
		.@newclass = .@job1;
		.@required_jlevel = 70;
	}
	if (.@newclass && .third_classes) {
		if (BaseLevel < .rebirth_blevel || JobLevel < .@required_jlevel) {
			mes "You need "
				+ (BaseLevel < .rebirth_blevel ? ((.rebirth_blevel - BaseLevel) +" more base levels "+ (JobLevel < .@required_jlevel ? "and " : "")) : "")
				+ (JobLevel < .@required_jlevel ? (.@required_jlevel - JobLevel) +" more job levels " : "")
				+ "to continue.";
			close;
		}
		mes "Switch to "+jobname(.@newclass)+"?";
		next;
		Job_Menu(.@newclass);
		close;
	}
	if (.@eac&EAJL_2)
		if (.@eac&(EAJL_UPPER|EAJL_BABY) || roclass(.@eac|EAJL_UPPER) == -1) {
			mes "No more jobs are available.";
			close;
		}
	if ((.@eac&EAJ_BASEMASK) == EAJ_NOVICE) {
		if (JobLevel < .jobchange_first) {
			mes "A job level of "+.jobchange_first+" is required to change into the 1st Class.";
		} else if (Class == Job_Novice_High && .linear_jobchange && lastJob) {
			mes "Switch classes now?";
			next;
			Job_Menu(roclass((eaclass(lastJob)&EAJ_BASEMASK)|EAJL_UPPER));
		} else if (Class == Job_Novice) {
			Job_Menu(Job_Swordman, Job_Mage, Job_Archer, Job_Acolyte, Job_Merchant, Job_Thief,
					 Job_SuperNovice, Job_Taekwon, Job_Gunslinger, Job_Ninja, Job_Baby);
		} else if (Class == Job_Novice_High) {
			Job_Menu(Job_Swordman_High, Job_Mage_High, Job_Archer_High, Job_Acolyte_High, Job_Merchant_High, Job_Thief_High);
		} else if (Class == Job_Baby) {
			Job_Menu(Job_Baby_Swordman, Job_Baby_Mage, Job_Baby_Archer, Job_Baby_Acolyte, Job_Baby_Merchant, Job_Baby_Thief,
					 Job_Super_Baby);
		} else {
			mes "An error has occurred.";
		}
		close;
	}
	if (roclass(.@eac|EAJL_2_1) == -1 || roclass(.@eac|EAJL_2_2) == -1) {
		mes "No more jobs are available.";
	} else if (!(.@eac&EAJL_2) && JobLevel < .jobchange_second) {
		mes "A job level of "+.jobchange_second+" is required to change into the 2nd Class.";
	} else if (.linear_jobchange && lastJob && (.@eac&EAJL_UPPER)) {
		mes "Switch classes now?";
		next;
		Job_Menu(lastJob+Job_Novice_High);
	} else {
		Job_Menu(.@job1, .@job2);
	}	
	close;

function Job_Menu {
	while (true) {
		if (getargcount() > 1) {
			mes "Select a job.";
			.@menu$ = "";
			for (.@i = 0; .@i < getargcount(); ++.@i)
				.@menu$ += " ~ "+jobname(getarg(.@i))+":";
			.@menu$ += " ~ ^777777Cancel^000000";
			next;
			.@newjob = getarg(select(.@menu$)-1, 0);
			if (!.@newjob) close;
			if ((.@newjob == Job_SuperNovice || .@newjob == Job_Super_Baby) && BaseLevel < .supernovice_level) {
				mes "[Job Master]";
				mes "A base level of "+.supernovice_level+" is required to turn into a "+jobname(.@newjob)+".";
				close;
			}
			mes "[Job Master]";
			mes "Are you sure?";
			next;
		} else {
			.@newjob = getarg(0);
		}
		if (select(" ~ Change into ^0055FF"+ jobname(.@newjob) +"^000000 class", " ~ ^777777"+(getargcount() > 1 ? "Go back": "Cancel")+"^000000") == 1) {
			mes "[Job Master]";
			mes "You are now "+A_An(jobname(.@newjob))+"!";
			if (.@newjob == Job_Novice_High && .linear_jobchange)
				lastJob = Class; // Note: This is incompatible with the Valkyrie rebirth script.
			jobchange .@newjob;
			if (.@newjob == Job_Novice_High)
				resetlvl(1);
			if (.@newjob == Job_Baby) {
				resetlvl(4);
				SkillPoint = 0;
			}
			specialeffect2 EF_ANGEL2;
			specialeffect2 EF_ELECTRIC;
			if (.platinum)
				callsub Get_Platinum;
			close;
		}
		if (getargcount() == 1)
			return;
		mes "[Job Master]";
	}
	end;
}

function A_An {
	setarray .@vowels$, "a", "e", "i", "o", "u";
	.@firstletter$ = strtolower(charat(getarg(0), 0));
	for (.@i = 0; .@i < getarraysize(.@vowels); ++.@i) {
		if (.@vowels$[.@i] == .@firstletter$)
			return "an "+getarg(0);
	}
	return "a "+getarg(0);
}

Get_Platinum:
	skill NV_FIRSTAID, 1, 0;
	if (BaseClass == Job_Novice) {
		if (Class != Job_SuperNovice)
			skill NV_TRICKDEAD, 1, 0;
	} else if (BaseClass == Job_Swordman) {
		skill SM_MOVINGRECOVERY, 1, 0;
		skill SM_FATALBLOW, 1, 0;
		skill SM_AUTOBERSERK, 1, 0;
	} else if (BaseClass == Job_Mage) {
		skill MG_ENERGYCOAT, 1, 0;
	} else if (BaseClass == Job_Archer) {
		skill AC_MAKINGARROW, 1, 0;
		skill AC_CHARGEARROW, 1, 0;
	} else if (BaseClass == Job_Acolyte) {
		skill AL_HOLYLIGHT, 1, 0;
	} else if (BaseClass == Job_Merchant) {
		skill MC_CARTREVOLUTION, 1, 0;
		skill MC_CHANGECART, 1, 0;
		skill MC_LOUD, 1, 0;
	} else if (BaseClass == Job_Thief) {
		skill TF_SPRINKLESAND, 1, 0;
		skill TF_BACKSLIDING, 1, 0;
		skill TF_PICKSTONE, 1, 0;
		skill TF_THROWSTONE, 1, 0;
	}

	if (BaseJob == Job_Knight) {
		skill KN_CHARGEATK, 1, 0;
	} else if (BaseJob == Job_Priest) {
		skill PR_REDEMPTIO, 1, 0;
	} else if (BaseJob == Job_Wizard) {
		skill WZ_SIGHTBLASTER, 1, 0;
	} else if (BaseJob == Job_Blacksmith) {
		skill BS_UNFAIRLYTRICK, 1, 0;
		skill BS_GREED, 1, 0;
	} else if (BaseJob == Job_Hunter) {
		skill HT_PHANTASMIC, 1, 0;
	} else if (BaseJob == Job_Assassin) {
		skill AS_SONICACCEL, 1, 0;
		skill AS_VENOMKNIFE, 1, 0;
	} else if (BaseJob == Job_Crusader) {
		skill CR_SHRINK, 1, 0;
	} else if (BaseJob == Job_Monk) {
		skill MO_KITRANSLATION, 1, 0;
		skill MO_BALKYOUNG, 1, 0;
	} else if (BaseJob == Job_Sage) {
		skill SA_CREATECON, 1, 0;
		skill SA_ELEMENTWATER, 1, 0;
		skill SA_ELEMENTGROUND, 1, 0;
		skill SA_ELEMENTFIRE, 1, 0;
		skill SA_ELEMENTWIND, 1, 0;
	} else if (BaseJob == Job_Rogue) {
		skill RG_CLOSECONFINE, 1, 0;
	} else if (BaseJob == Job_Alchemist) {
		skill AM_BIOETHICS, 1, 0;
	} else if (BaseJob == Job_Bard) {
		skill BA_PANGVOICE, 1, 0;
	} else if (BaseJob == Job_Dancer) {
		skill DC_WINKCHARM, 1, 0;
	}
	return;

OnInit:
	set .rebirth_blevel, 99;    // Minimum base level to reborn OR change to third class
	set .rebirth_jlevel, 50;    // Minimum base job level to reborn OR change to third class
	set .jobchange_first, 10;   // Minimum job level to turn into 1st class
	set .jobchange_second, 40;  // Minimum job level to turn into 2nd class
	set .third_classes, 1;      // Enable third classes/Extended Classes? (1: yes / 0: no)
	set .supernovice_level, 45; // Minimum base level to turn into Super Novice
	set .linear_jobchange, 1;   // Enforce linear class changes? (1: yes / 0: no)
	set .skill_point_check, 1;  // Force player to use up all skill points? (1: yes / 0: no)
	set .platinum, 1;           // Get platinum skills automatically? (1: yes / 0: no)
	
	set .healDelay, 1; //in seconds
	set .specialEffect, 2; //0 none, 1 area, 2 self
	initnpctimer;

	set .heal, 1; //0 to disabled
	set .buff, 1; //0 to disabled
	set .rental, 1; 
	set .stylist, 1;
	set .jobchange, 1;
	set .embued, 1;
	set .identify, 1;
	set .multiclass, 1;
	set .lottery, 1;

	setarray $embuedIds[0],4700,4950;
	set $embuePrice, 500; //number of shards
	set $embuePriceZ, 10000000; //zeny price

	setarray .shardIds[0], 29455, 29456, 29457, 512;
	
	setarray .lotteryIds[0],13062,2235,1255,5053,1285,
	1466,1476,5160,2256,
	2317,1162,1168,2258,
	1413,2249,
	1524,2246,
	10018,1366,1124,2106,
	1127,1125,1135,1128,5019,
	1133,1258,13046,
	2615,2234,2005,
	7114,1136,2327,5002,1552,1231,
	1223,1236,
	1363,1371,
	1468,5007,
	1131,1256,1815,
	1662,2004,1237,2334,2507,
	1306,1417,1141,
	1722,1557,1473,
	1471,5012,1474,
	1165,5096,13303,1235,
	2296,
	1242,1531,
	2700,
	1170,1153,2317,
	2659,2660,2661,2662,
	5116,1716,
	2519,2342,2412,2515,2655,
	2903,2648,
	2651,2319,1617,2650,
	2357,2524,2421,2229,
	1377,
	2509,2111,
	5123,1175,
	2678,2679,15008,
	1420,1422,
	2423,1579,2000,2702,
	1737,
	2022,1484,
	21004,2364,1196,18103,
	2544,1186,1637,
	5398,2133,13039,1483,
	15032;
	end;
}
